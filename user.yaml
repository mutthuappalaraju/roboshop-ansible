- name: user componenet
  hosts: user
  become: yes
  tasks:
    - name: disable old nodejs and enable nodejs
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

    - name: install nodejs
      ansible.builtin.package:
        name: nodejs
        state: present  

    - name: create roboshopuser
      ansible.builtin.user:      
        name: roboshop

    - name: Recursively remove app directory
      ansible.builtin.file:
        path: /app
        state: absent
 
    - name: create app directory
      ansible.builtin.file:
        path: /app 
        state: directory

    - name: download user application
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/user.zip
        dest: /tmp

    - name: unzip user application
      ansible.builtin.unarchive:
        src: /tmp/user.zip
        dest: /app
        remote_src: yes

    - name: Install dependencies
      ansible.buitin.command: npm install
      args:
        chdir: /app

    - name: copy user service
      ansible.builtin.copy:    
        src: user.service
        dest: /etc/systemd/system/user.service

    - name: daemon reload
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: copy mongodb repo
      ansible.builtin.copy:   
        src: mongodb.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: Install ntpdate
      ansible.builtin.package:    
        name: mongodb-org-shell 
        state: present

    - name: get the  user count
      ansible.builtin.command:  mongo --host mongodb.2512raju.online --quiet --eval 'db = db.getSiblingDB("user"); db.products.count()'
      register: user_count
  
    - name: load user data
      ansible.builtin.command: mongo --host mongodb.2512raju.online < /app/schema/user.js
      when: user_count.stdout == "0" 
 
    - name: start and enable user
      ansible.builtin.service:
        name: user
        state: restarted
        enabled: yes

     

  
  
       


     
            
      